% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jmcs.R
\name{jmcs}
\alias{jmcs}
\title{Joint Modelling for Continuous outcomes}
\usage{
jmcs(
  p1,
  yfile,
  cfile,
  mfile,
  point = 6,
  maxiter = 10000,
  do.trace = FALSE,
  type_file = TRUE,
  VarT = c("Intercept", "slope")
)
}
\arguments{
\item{p1}{The dimension of fixed effects (including intercept) in yfile.}

\item{yfile}{Y matrix for longitudinal measurements in long format. For example, for a subject with n measurements, there should be n rows for this subject. The # of rows in y matrix is the total number of measurements for all subjects in the study. The columns in Y should start with the subject ID (column 1), longitudinal outcome (column 2), the covariates for the random effects, and then the covariates for the fixed effects.}

\item{cfile}{C matrix for competing risks failure time data. Each subject has one data entry, so the number of rows equals to the number of subjects. The survival / censoring time is included in the first column, and the failure type coded as 0 (censored events), 1 (risk 1), or 2 (risk 2) is given in the second column. Two competing risks are assumed. The covariates are included in the third column and on. Covariates must be included.}

\item{mfile}{M vector to indicate the number of longitudinal measurements per subject. The number of rows equals to the number of subjects.}

\item{point}{Quadrature points used in the EM procedure.Default is 6.}

\item{maxiter}{Maximum values of iterations. Default is 10000.}

\item{do.trace}{Print detailed information of each iteration. Default is false, i.e., not to print the iteration details.}

\item{type_file}{Types of inputs. Default is true, i.e.  data files with headers. If set to "F", inputs are changed to data matrixes or data.frames (with headers)}

\item{VarT}{Types of random effect parameterization. Default is c("Intercept", "slope"), i.e., both random intercept and slope are specified. If set to "Intercept only", only random intercept is considered.}

\item{...}{further arguments passed to or from other methods.}
}
\value{
Object of class \code{FastJM} with elements
  \tabular{ll}{
      \code{vcmatrix}    \tab  The variance-covariance matrix for all the parameters. The parameters are in the order: \eqn{\beta}, \eqn{\sigma^2}, \eqn{\gamma}, \eqn{\nu}, and \eqn{\Sigma}. The elements in \eqn{\Sigma} are output in the order along the main diagonal line, then the second main diagonal line, and so on. \cr
      \code{betas} \tab The point  estimates of \eqn{\beta}. \cr
      \code{se_betas} \tab The standard error estimate of \eqn{\beta}. \cr
      \code{gamma_matrix} \tab  The point  estimate of \eqn{\gamma}. \cr
      \code{se_gamma_matrix}   \tab  The standard error estimate of \eqn{\gamma}. \cr
      \code{vee1_estimate} \tab The point  estimate of \eqn{\nu_1}. \cr
      \code{se_vee1_estimate}    \tab The standard error estimate of \eqn{\nu_1}. \cr
      \code{vee2_estimate} \tab The point  estimate of \eqn{\nu_2}. \cr
      \code{se_vee2_estimate}    \tab The standard error estimate of \eqn{\nu_2}. \cr
      \code{sigma2_val}     \tab  The point estimate of \eqn{\sigma^2}.\cr
      \code{se_sigma2_val}     \tab  The standard error estimate of \eqn{\sigma^2}.\cr
      \code{sigma_matrix}     \tab The point estimate of \eqn{\Sigma} (only the upper triangle portion of the matrix is output).\cr
      \code{se_sigma}     \tab The standard error estimate of \eqn{\Sigma}.The standard errors are given in this order: main diagonal, the second main diagonal, and so on. \cr
      \code{loglike}     \tab Log Likelihood.\cr
  }
}
\description{
Joint modeling of longitudinal continuous data and competing risks
}
\examples{
# A toy example on simulated data
# Three data files are required to run the joint models.
# yfile denotes the longitufinal data, cfile denotes the survival data,
# and mfile denotes the number of repeated measurements for subjects.
require(FastJM)
set.seed(123)
yfile=system.file("extdata", "simy0.txt", package = "FastJM")
cfile=system.file("extdata", "simc0.txt", package = "FastJM")
mfile=system.file("extdata", "simm0.txt", package = "FastJM")
res2=jmcs(p1=3,yfile,cfile,mfile,point=6,type_file=TRUE)
res2
}
